*** Phần 1: getting started 

I. HTTP protocol
    II. Server side rendering vs client side rendering
        1. SSR: mã html được trả về từ server => nếu view page source thì sẽ thấy toàn bộ mã của trang 
                - tốt cho sale, vì đoạn mã có sẵn content => đc các search-bot của gg tìm dễ hơn(các trang báo)
                - luôn req lại từ đầu khi chuyển tab trong trang
                - request đâuf sẽ nhanh hơn.

        2. CSR: view page source => thẻ main trống, cùng vs file JS
                - client sẽ đọc file JS, sau đó render ra page(bắt buộc phải bật JS nha)
                - ko phải reload lại trang
                - lần đầu req laau hơn, vì đọc thẻ main trống, sau đó mới apply code js 
        
    III.. Express : 
            + khởi tạo node project: npm init 
            + nhớ thêm `type: module` ở packeage.json để chạy import ES6. 

    IV. nodemon và inspector 
            + nodemon: lắng nghe sự thay đổi của file => reload app
            + debug bằng node dev tool: mở ctrl+shift+i => tìm biểu tương node => đặt break point

    V. Morgan not morganna :)
            + HTTP request logger middleware for nodejs (show request để dex debug)

----------------------------------------------------------------

*** Phần 2L kiến thức cốt lõi 
        I. template engine(handlebars or pub )
                - viết file chữa mã html
                - sau đó nhúng vào các route đêr render 

                - phần khung giống nhau trong các trang,còn nội dụng khác nhau
                => tạo 1 template để dùng tái sử dụng 
                - nạp partials vào trang main {{> abc/def}} (viết đúng cú pháp và vị trí)
        
        II. Static file vaf SCSS
                1. static file : khi chúng ta muốn thêm ảnh, tập tin tĩnh để ng dùng có thể tải về
                        + thêm folder public/img/<picture> trong src,
                        + dùng app.use(express.static(<file>))
                2. node-sass: thay vì viết 1 file css nghìn dòng => dùng sass đê code css và dễ quản lý hơn
                    
                    docs: https://viblo.asia/p/sass-va-scss-ban-chon-gi-part-1-gAm5yR1XKdb

                        + từ file scss -> chuyển thành file css
                        + vd: khai báo biến, code lồng nhau(nesting), chia nhỏ code(partial), mixin, function,..

                        ** cách dungf: 
                                - thường sử dugnj commandline để chuyển scss -> css
                                - thêm script: "watch": "node-sass --watch <input> <output>" :viết code ở .sass, tự thêm sang css (thêm --watch để tự động chạy khi file thay đổi)
                                - thêm file _variable.scss để viết các biến, tận dụng code, (sử dụng ` @import 'variable' ` trong file scss: $red-color) 
                                - nhớ link vào main.hbs nhá :)))
                                - 
                3. Using Bootstrap
                        - copy css, và js code về tích hợp vào file html 
                        - sử dụng nav của bootstrap để làm cho nhahnh phần header :))
                
                4. Basic routing: https://expressjs.com/en/starter/basic-routing.html
                5. Get method & query parameters 
                        vd: google.com/search?q=github&user=hieunm
                        - tạo trang search 
                        - sử dụng node dev tool = crtl + shift + i -> node symbol -> đặt break point
                        !!! req.query : chứa thông tin về truy vấn, nên tận dụng
                        - thường dùng vs GET để truyền dữ liệu

                6. hành vi mặc định Form : tìm trên bootrap và tinh chỉnh lại
                        - form phải có input type, name( hành vi submit chỉ đính những input có attrbute là `name` lên thanh search) 
                        - form có method mắc định là GET -> có thẻ chỉnh bằng cách sửa method ='POST'
                        - action: submit ở đâu ( nếu để trông, sẽ vẫn ở tại trang, nếu thêm /new_route -> redirect sang trang mới và đính kèm param)
                
 *** Xây dựng website 
        I. Mô hình MVC:
        II. Routes and Controllers 
                Action --> Dispatcher --> function handler
                - cần tạo controller và routes
                B1: tạo folder src/routes, src/app/controllers
                B2: trong controller tạo class(trùng tên vs file)- lí do là muôn tạo nhiều function handler vs 1 route.
                B3: tạo file index.js trong routes -> để viết tất cả các routes vào r sau đó export ra dùng (napj abc.route.js vao nha) !DÙNG USE. VD app.use('/',homeRouter)

                !!! import thi nho them .js nha
                link về require, module.export, export:s https://viblo.asia/p/nodejs-require-exports-and-moduleexports-djeZ18PQKWz

                !!! sẽ có những trang ko thuộc 1 tài nguyên cụ thể -> cần nhét vào 1 file riêng vd: home, contact, sponsors 
        III. MongoDB 
                - sau khi cài xong :))))))
                - terminal -> mongod.
                - mở mongo compass -> thao tác (nếu phải set lại connection string -> search gg :)) https://docs.mongodb.com/manual/reference/connection-string/)

                !!! Index trong database (quan trongj) https://viblo.asia/p/index-trong-database-la-gi-tai-sao-can-index-database-Az45bYDzlxY
        
        IV. Sử dungj prettier: sử dụng trong làm việc nhoms: yêu cầu các thành viên trong nhóm có cùng code format => thông nhất cách trình bày code các thành viên -> dễ đọc
                1. prettier
                2. lint-staged 
                3. husky


        